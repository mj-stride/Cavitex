# install.packages('lubridate')
library(shiny)
library(jsonlite)
library(tidyverse)
library(leaflet)
library(shinyTime)
library(lubridate)
# r file
source('D:\\Codes\\cavitex\\waze\\draw_waze.R')
date_now = format(Sys.time(), '%Y-%m-%d')
ui <- fillPage(
tags$head(
tags$style(
HTML(
'.fill-20 { float: left; width: 20%; height: 100%; }',
'.fill-80 { float: right; width: 80%; height: 100%;}',
'#id_search { float: right; background-color: #46923C; color: white; border: 2px solid #46923C; }'
)
)
),
# for search of date and time
div(
class = 'fill-20',
style = 'padding: 10px;',
dateInput(
inputId = 'id_date',
label = 'Choose date:',
min = '2023-01-01',
max = '2024-12-31',
value = date_now
),
timeInput(
inputId = 'id_time',
label = 'Choose time (hour:minute):',
value = Sys.time(),
seconds = FALSE
),
actionButton(
class = 'id_search',
inputId = 'id_search',
label = 'Search'
)
),
div(
class = 'fill-80',
uiOutput(
outputId = 'id_map_waze'
)
)
)
default <- function(input, output) {
folder_path <- 'D:\\Codes\\cavitex\\waze\\waze_feeds\\downloaded_waze'
file_path <- paste(folder_path, date_now, strftime(Sys.time(), '%H%M'), sep = '\\')
file <- paste(file_path, '.json', sep = '')
if (file.exists(file)) {
map <- draw_poly_map(file)
output$id_map_waze <- renderUI({
div(
map
)
})
} else {
# no such file
showModal(
modalDialog(
title = 'No file found',
'Please choose other date or time.',
easyClose = TRUE,
footer = div(
modalButton('Close')
)
)
)
}
}
server <- function(input, output, session) {
default(input, output)
observeEvent(
input$id_search, {
input_date <- input$id_date
input_time <- strftime(input$id_time, '%H%M')
folder_path <- 'D:\\Codes\\cavitex\\waze\\waze_feeds\\downloaded_waze'
file_path <- paste(folder_path, input_date, input_time, sep = '\\')
file <- paste(file_path, '.json', sep = '')
if (file.exists(file)) {
map <- draw_poly_map(file)
output$id_map_waze <- renderUI({
div(
map,
height = '100%',
style = 'background-color: red; height: 100%;'
)
})
} else {
# no such file
showModal(
modalDialog(
title = 'No file found',
'Please choose other date or time.',
easyClose = TRUE,
footer = div(
modalButton('Close')
)
)
)
}
}
)
}
waze <- shinyApp(ui = ui, server = server)
waze
library(jsonlite)
library(tidyverse)
library(leaflet)
draw_poly_map <- function(file_name) {
waze_data <- fromJSON(file_name)
# print(waze_data)
# extract alerts data
df_alerts <- as.data.frame(waze_data$alerts)
# check alert type and set marker color
map_dfcolor <- dfalerts %>%
mutate(color = case_when(str_detect(type, "JAM") ~ "green",
str_detect(type, "ROAD_CLOSED") ~ "blue",
str_detect(type, "HAZARD") ~ "orange",
str_detect(type, "ACCIDENT") ~ "red",
TRUE ~ "a default")
)
# extract jams data
dfjams <- as.data.frame(waze_data$jams)
dfjams_length <- length(waze_data$jams$line) # get jam line count
# create leaflet map
# add markers (alert); legend
map_combined <- leaflet(
height = 800
) %>%
addTiles() %>%
addLegend( # for circle markers
"topright",
title = "Map Marker Legend",
colors = c("green", "blue", "orange", "red"),
label = c("Jam", "Road Closed", "Hazard", "Accident"),
opacity = 1
) %>%
addLegend( # for polylines
"bottomright",
title = "Map Polyine Legend",
colors = c("green"),
label = c("Jam"),
opacity = 1
) %>%
addCircleMarkers(
data = dfalerts,
lng = ~location.x,
lat = ~location.y,
popup = ~subtype,
color = map_dfcolor$color,
opacity = 1,
fillOpacity = 1,
weight = 2,
radius = 4
)
# add polyline (jam/traffic)
for (i in 1:dfjams_length) {
map_combined <- addPolylines(
map = map_combined,
data = dfjams,
lng = ~line[[i]]$x,
lat = ~line[[i]]$y,
weight = 2,
opacity = 1,
color = "green"
)
}
# display map and legend
return(map_combined)
}
# install.packages('shinyTime')
# install.packages('lubridate')
library(shiny)
library(jsonlite)
library(tidyverse)
library(leaflet)
library(shinyTime)
library(lubridate)
# r file
source('D:\\Codes\\cavitex\\waze\\draw_waze.R')
date_now = format(Sys.time(), '%Y-%m-%d')
ui <- fillPage(
tags$head(
tags$style(
HTML(
'.fill-20 { float: left; width: 20%; height: 100%; }',
'.fill-80 { float: right; width: 80%; height: 100%;}',
'#id_search { float: right; background-color: #46923C; color: white; border: 2px solid #46923C; }'
)
)
),
# for search of date and time
div(
class = 'fill-20',
style = 'padding: 10px;',
dateInput(
inputId = 'id_date',
label = 'Choose date:',
min = '2023-01-01',
max = '2024-12-31',
value = date_now
),
timeInput(
inputId = 'id_time',
label = 'Choose time (hour:minute):',
value = Sys.time(),
seconds = FALSE
),
actionButton(
class = 'id_search',
inputId = 'id_search',
label = 'Search'
)
),
div(
class = 'fill-80',
uiOutput(
outputId = 'id_map_waze'
)
)
)
default <- function(input, output) {
folder_path <- 'D:\\Codes\\cavitex\\waze\\waze_feeds\\downloaded_waze'
file_path <- paste(folder_path, date_now, strftime(Sys.time(), '%H%M'), sep = '\\')
file <- paste(file_path, '.json', sep = '')
if (file.exists(file)) {
map <- draw_poly_map(file)
output$id_map_waze <- renderUI({
div(
map
)
})
} else {
# no such file
showModal(
modalDialog(
title = 'No file found',
'Please choose other date or time.',
easyClose = TRUE,
footer = div(
modalButton('Close')
)
)
)
}
}
server <- function(input, output, session) {
default(input, output)
observeEvent(
input$id_search, {
input_date <- input$id_date
input_time <- strftime(input$id_time, '%H%M')
folder_path <- 'D:\\Codes\\cavitex\\waze\\waze_feeds\\downloaded_waze'
file_path <- paste(folder_path, input_date, input_time, sep = '\\')
file <- paste(file_path, '.json', sep = '')
if (file.exists(file)) {
map <- draw_poly_map(file)
output$id_map_waze <- renderUI({
div(
map,
height = '100%',
style = 'background-color: red; height: 100%;'
)
})
} else {
# no such file
showModal(
modalDialog(
title = 'No file found',
'Please choose other date or time.',
easyClose = TRUE,
footer = div(
modalButton('Close')
)
)
)
}
}
)
}
waze <- shinyApp(ui = ui, server = server)
waze
# install.packages('shinyTime')
# install.packages('lubridate')
library(shiny)
library(jsonlite)
library(tidyverse)
library(leaflet)
library(shinyTime)
library(lubridate)
# r file
source('D:\\Codes\\cavitex\\waze\\draw_waze.R')
date_now = format(Sys.time(), '%Y-%m-%d')
ui <- fillPage(
tags$head(
tags$style(
HTML(
'.fill-20 { float: left; width: 20%; height: 100%; }',
'.fill-80 { float: right; width: 80%; height: 100%;}',
'#id_search { float: right; background-color: #46923C; color: white; border: 2px solid #46923C; }'
)
)
),
# for search of date and time
div(
class = 'fill-20',
style = 'padding: 10px;',
dateInput(
inputId = 'id_date',
label = 'Choose date:',
min = '2023-01-01',
max = '2024-12-31',
value = date_now
),
timeInput(
inputId = 'id_time',
label = 'Choose time (hour:minute):',
value = Sys.time(),
seconds = FALSE
),
actionButton(
class = 'id_search',
inputId = 'id_search',
label = 'Search'
)
),
div(
class = 'fill-80',
uiOutput(
outputId = 'id_map_waze'
)
)
)
default <- function(input, output) {
folder_path <- 'D:\\Codes\\cavitex\\waze\\waze_feeds\\downloaded_waze'
file_path <- paste(folder_path, date_now, strftime(Sys.time(), '%H%M'), sep = '\\')
file <- paste(file_path, '.json', sep = '')
if (file.exists(file)) {
map <- draw_poly_map(file)
output$id_map_waze <- renderUI({
div(
map
)
})
} else {
# no such file
showModal(
modalDialog(
title = 'No file found',
'Please choose other date or time.',
easyClose = TRUE,
footer = div(
modalButton('Close')
)
)
)
}
}
server <- function(input, output, session) {
default(input, output)
observeEvent(
input$id_search, {
input_date <- input$id_date
input_time <- strftime(input$id_time, '%H%M')
folder_path <- 'D:\\Codes\\cavitex\\waze\\waze_feeds\\downloaded_waze'
file_path <- paste(folder_path, input_date, input_time, sep = '\\')
file <- paste(file_path, '.json', sep = '')
if (file.exists(file)) {
map <- draw_poly_map(file)
output$id_map_waze <- renderUI({
div(
map,
height = '100%',
style = 'background-color: red; height: 100%;'
)
})
} else {
# no such file
showModal(
modalDialog(
title = 'No file found',
'Please choose other date or time.',
easyClose = TRUE,
footer = div(
modalButton('Close')
)
)
)
}
}
)
}
waze <- shinyApp(ui = ui, server = server)
waze
# install.packages('shinyTime')
# install.packages('lubridate')
library(shiny)
library(jsonlite)
library(tidyverse)
library(leaflet)
library(shinyTime)
library(lubridate)
# r file
source('D:\\Codes\\cavitex\\waze\\draw_waze.R')
date_now = format(Sys.time(), '%Y-%m-%d')
ui <- fillPage(
tags$head(
tags$style(
HTML(
'.fill-20 { float: left; width: 20%; height: 100%; }',
'.fill-80 { float: right; width: 80%; height: 100%;}',
'#id_search { float: right; background-color: #46923C; color: white; border: 2px solid #46923C; }'
)
)
),
# for search of date and time
div(
class = 'fill-20',
style = 'padding: 10px;',
dateInput(
inputId = 'id_date',
label = 'Choose date:',
min = '2023-01-01',
max = '2024-12-31',
value = date_now
),
timeInput(
inputId = 'id_time',
label = 'Choose time (hour:minute):',
value = Sys.time(),
seconds = FALSE
),
actionButton(
class = 'id_search',
inputId = 'id_search',
label = 'Search'
)
),
div(
class = 'fill-80',
uiOutput(
outputId = 'id_map_waze'
)
)
)
default <- function(input, output) {
folder_path <- 'D:\\Codes\\cavitex\\waze\\waze_feeds\\downloaded_waze'
file_path <- paste(folder_path, date_now, strftime(Sys.time(), '%H%M'), sep = '\\')
file <- paste(file_path, '.json', sep = '')
if (file.exists(file)) {
map <- draw_poly_map(file)
output$id_map_waze <- renderUI({
div(
map
)
})
} else {
# no such file
showModal(
modalDialog(
title = 'No file found',
'Please choose other date or time.',
easyClose = TRUE,
footer = div(
modalButton('Close')
)
)
)
}
}
server <- function(input, output, session) {
default(input, output)
observeEvent(
input$id_search, {
input_date <- input$id_date
input_time <- strftime(input$id_time, '%H%M')
folder_path <- 'D:\\Codes\\cavitex\\waze\\waze_feeds\\downloaded_waze'
file_path <- paste(folder_path, input_date, input_time, sep = '\\')
file <- paste(file_path, '.json', sep = '')
if (file.exists(file)) {
map <- draw_poly_map(file)
output$id_map_waze <- renderUI({
div(
map,
height = '100%',
style = 'background-color: red; height: 100%;'
)
})
} else {
# no such file
showModal(
modalDialog(
title = 'No file found',
'Please choose other date or time.',
easyClose = TRUE,
footer = div(
modalButton('Close')
)
)
)
}
}
)
}
waze <- shinyApp(ui = ui, server = server)
waze
