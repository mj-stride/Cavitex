df_place <- popular_times_graph(
place_name,
place_address,
day_week,
day_number
)
if (df_place$status != 500) {
# get popular times
popular_times <- as.data.frame(df_place$popular_times)
day_popularity <- subset(popular_times,
day_of_week == day_number,
select = c(hour, popularity))
# select popularity
popularity <- day_popularity %>% select(popularity)
# select popularity time
hour <- day_popularity %>% select(hour)
# show bar graph
output$id_graph <- renderPlot({
# create bar graph
barplot.default(
popularity$popularity,
names.arg = hour$hour,
# ylab = "Popularity",
xlab = "Hour",
main = paste(place_name, day_week, sep = " - "),
col = "#46923C"
)
})
# show map
output$id_map <- renderLeaflet({
leaflet(height = "100%") %>%
addTiles() %>%
addMarkers(
data = df_place,
lng = ~lat,
lat = ~lon,
popup = paste(paste("<b>Name:</b>", df_place$place_name, sep = " "),
paste("<b>Address:</b>", df_place$address, sep = " "),
sep = "\n")
)
})
} else {
showModal(
modalDialog(
title = "Failed to load map",
"Invalid place name and/or address.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
} else {
showModal(
modalDialog(
title = "Failed to search place",
"Address should not be left blank.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
} else {
showModal(
modalDialog(
title = "Failed to search place",
"Place name should not be left blank.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
}
)
}
shinyApp(ui = ui, server = server)
# install.packages("shiny")
# install.packages("shinyjs")
# r file
source("D:\\Codes\\r_cavitex\\google_popular_times\\get_week_of_day.R")
source("D:\\Codes\\r_cavitex\\google_popular_times\\google_popular_times.R")
library(shiny)
library(shinyjs)
library(tidyverse)
library(leaflet)
# html ui
ui <- fillPage(
tags$head(
tags$style(
type = "text/css",
"body { height: 100%; background-color: white; }",
".fill-25 { float: left; width: 25%; height: 100%; }",
".fill-75 { float: right; width: 75%; height: 100%;}",
"#id_place_name { border: 2px solid #46923C; }",
"#id_address { border: 2px solid #46923C; }",
"#id_search { float: right; background-color: #46923C; color: white; border: 2px solid #46923C }"
)
),
# search panel
div(
class = "fill-25",
div(
style = "padding: 10px; margin-bottom: 30px",
h3("Google Popular Times", style = "font-weight: bold; color: #46923C;"),
textInput(inputId = "id_place_name", label = "Place name", width = "100%"),
textInput(inputId = "id_address", label = "Address", width = "100%"),
actionButton(inputId = "id_search", label = "Search"),
),
div(
style = "background-color: red;",
plotOutput(outputId = "id_graph", width = "100%")
)
),
# map panel
div(
id = "id_map_default",
class = "fill-75",
leafletOutput(outputId = "id_map", width = "100%", height = "100%")
)
)
server <- function(input, output, session) {
output$id_map <- renderLeaflet({
leaflet(height = "100%") %>%
addTiles() %>%
setView(
lng = 121.7740,
lat = 12.8797,
zoom = 6
)
})
observeEvent(
input$id_search, {
place_name <- input$id_place_name
place_address <- input$id_address
if (place_name != "") {
if (place_address != "") {
# get day of week
day_week <- weekdays(Sys.Date())
day_number <- get_week_of_day(day_week)
df_place <- popular_times_graph(
place_name,
place_address,
day_week,
day_number
)
if (df_place$status != 500) {
# get popular times
popular_times <- as.data.frame(df_place$popular_times)
day_popularity <- subset(popular_times,
day_of_week == day_number,
select = c(hour, popularity))
# select popularity
popularity <- day_popularity %>% select(popularity)
# select popularity time
hour <- day_popularity %>% select(hour)
# show bar graph
output$id_graph <- renderPlot({
# create bar graph
barplot.default(
popularity$popularity,
names.arg = hour$hour,
# ylab = "Popularity",
xlab = "Hour",
main = paste(place_name, day_week, sep = " - "),
col = "#46923C"
)
})
# show map
output$id_map <- renderLeaflet({
leaflet(height = "100%") %>%
addTiles() %>%
addMarkers(
data = df_place,
lng = ~lat,
lat = ~lon,
popup = paste(paste("<b>Name:</b>", df_place$place_name, sep = " "),
paste("<b>Address:</b>", df_place$address, sep = " "),
sep = "\n")
)
})
} else {
showModal(
modalDialog(
title = "Failed to load map",
"Invalid place name and/or address.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
} else {
showModal(
modalDialog(
title = "Failed to search place",
"Address should not be left blank.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
} else {
showModal(
modalDialog(
title = "Failed to search place",
"Place name should not be left blank.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
}
)
}
shinyApp(ui = ui, server = server)
# install.packages("shiny")
# install.packages("shinyjs")
# r file
source("D:\\Codes\\r_cavitex\\google_popular_times\\get_week_of_day.R")
source("D:\\Codes\\r_cavitex\\google_popular_times\\google_popular_times.R")
library(shiny)
library(tidyverse)
library(leaflet)
# html ui
ui <- fillPage(
tags$head(
tags$style(
type = "text/css",
"body { height: 100%; background-color: white; }",
".fill-25 { float: left; width: 25%; height: 100%; }",
".fill-75 { float: right; width: 75%; height: 100%;}",
"#id_place_name { border: 2px solid #46923C; }",
"#id_address { border: 2px solid #46923C; }",
"#id_search { float: right; background-color: #46923C; color: white; border: 2px solid #46923C }"
)
),
# search panel
div(
class = "fill-25",
div(
style = "padding: 10px; margin-bottom: 30px",
h3("Google Popular Times", style = "font-weight: bold; color: #46923C;"),
textInput(inputId = "id_place_name", label = "Place name", width = "100%"),
textInput(inputId = "id_address", label = "Address", width = "100%"),
actionButton(inputId = "id_search", label = "Search"),
),
div(
style = "background-color: red;",
plotOutput(outputId = "id_graph", width = "100%")
)
),
# map panel
div(
id = "id_map_default",
class = "fill-75",
leafletOutput(outputId = "id_map", width = "100%", height = "100%")
)
)
server <- function(input, output, session) {
output$id_map <- renderLeaflet({
leaflet(height = "100%") %>%
addTiles() %>%
setView(
lng = 121.7740,
lat = 12.8797,
zoom = 6
)
})
observeEvent(
input$id_search, {
place_name <- input$id_place_name
place_address <- input$id_address
if (place_name != "") {
if (place_address != "") {
# get day of week
day_week <- weekdays(Sys.Date())
day_number <- get_week_of_day(day_week)
df_place <- popular_times_graph(
place_name,
place_address,
day_week,
day_number
)
if (df_place$status != 500) {
# get popular times
popular_times <- as.data.frame(df_place$popular_times)
day_popularity <- subset(popular_times,
day_of_week == day_number,
select = c(hour, popularity))
# select popularity
popularity <- day_popularity %>% select(popularity)
# select popularity time
hour <- day_popularity %>% select(hour)
# show bar graph
output$id_graph <- renderPlot({
# create bar graph
barplot.default(
popularity$popularity,
names.arg = hour$hour,
# ylab = "Popularity",
xlab = "Hour",
main = paste(place_name, day_week, sep = " - "),
col = "#46923C"
)
})
# show map
output$id_map <- renderLeaflet({
leaflet(height = "100%") %>%
addTiles() %>%
addMarkers(
data = df_place,
lng = ~lat,
lat = ~lon,
popup = paste(paste("<b>Name:</b>", df_place$place_name, sep = " "),
paste("<b>Address:</b>", df_place$address, sep = " "),
sep = "\n")
)
})
} else {
showModal(
modalDialog(
title = "Failed to load map",
"Invalid place name and/or address.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
} else {
showModal(
modalDialog(
title = "Failed to search place",
"Address should not be left blank.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
} else {
showModal(
modalDialog(
title = "Failed to search place",
"Place name should not be left blank.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
}
)
}
shinyApp(ui = ui, server = server)
# install.packages("shiny")
# r file
source("D:\\Codes\\r_cavitex\\google_popular_times\\get_week_of_day.R")
source("D:\\Codes\\r_cavitex\\google_popular_times\\google_popular_times.R")
library(shiny)
library(tidyverse)
library(leaflet)
# html ui
ui <- fillPage(
tags$head(
tags$style(
type = "text/css",
"body { height: 100%; background-color: white; }",
".fill-25 { float: left; width: 25%; height: 100%; }",
".fill-75 { float: right; width: 75%; height: 100%;}",
"#id_place_name { border: 2px solid #46923C; }",
"#id_address { border: 2px solid #46923C; }",
"#id_search { float: right; background-color: #46923C; color: white; border: 2px solid #46923C }"
)
),
# left panel
div(
class = "fill-25",
# search
div(
style = "padding: 10px; margin-bottom: 30px",
h3("Google Popular Times", style = "font-weight: bold; color: #46923C;"), # title
textInput(inputId = "id_place_name", label = "Place name", width = "100%"), # place name
textInput(inputId = "id_address", label = "Address", width = "100%"), # address
actionButton(inputId = "id_search", label = "Search"), # button
),
# graph
div(
plotOutput(outputId = "id_graph", width = "100%")
)
),
# right panel
# map
div(
id = "id_map_default",
class = "fill-75",
leafletOutput(outputId = "id_map", width = "100%", height = "100%")
)
)
server <- function(input, output, session) {
output$id_map <- renderLeaflet({
leaflet(height = "100%") %>%
addTiles() %>%
setView(
lng = 121.7740,
lat = 12.8797,
zoom = 6
)
})
observeEvent(
input$id_search, {
place_name <- input$id_place_name
place_address <- input$id_address
if (place_name != "") {
if (place_address != "") {
# get day of week
day_week <- weekdays(Sys.Date())
day_number <- get_week_of_day(day_week)
df_place <- popular_times_graph(
place_name,
place_address,
day_week,
day_number
)
if (df_place$status != 500) {
# get popular times
popular_times <- as.data.frame(df_place$popular_times)
day_popularity <- subset(popular_times,
day_of_week == day_number,
select = c(hour, popularity))
# select popularity
popularity <- day_popularity %>% select(popularity)
# select popularity time
hour <- day_popularity %>% select(hour)
# show bar graph
output$id_graph <- renderPlot({
# create bar graph
barplot.default(
popularity$popularity,
names.arg = hour$hour,
# ylab = "Popularity",
xlab = "Hour",
main = paste(place_name, day_week, sep = " - "),
col = "#46923C"
)
})
# show map
output$id_map <- renderLeaflet({
leaflet(height = "100%") %>%
addTiles() %>%
addMarkers(
data = df_place,
lng = ~lat,
lat = ~lon,
popup = paste(paste("<b>Name:</b>", df_place$place_name, sep = " "),
paste("<b>Address:</b>", df_place$address, sep = " "),
sep = "\n")
)
})
} else {
showModal(
modalDialog(
title = "Failed to load map",
"Invalid place name and/or address.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
} else {
showModal(
modalDialog(
title = "Failed to search place",
"Address should not be left blank.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
} else {
showModal(
modalDialog(
title = "Failed to search place",
"Place name should not be left blank.",
easyClose = TRUE,
footer = div(
modalButton("Close")
)
)
)
}
}
)
}
shinyApp(ui = ui, server = server)
